const Z="data:text/markdown;base64,SGVsbG8gTWFydGluZ3JvdmUgcmVhZGVycyBhbmQgZnV0dXJlIFNpbHZlciBTaHJpbXAgZ2FtZXJzLiBTaWx2ZXIgU2hyaW1wClN0dWRpb3MgaXMgbXkgZW1lcmdpbmcgdmlkZW8gZ2FtZSBkZXNpZ24gc3R1ZGlvLCBmb2N1c2luZyBvbgpzdG9yeXRlbGxpbmcsIGFydCBkaXJlY3Rpb24sIGFuZCBjb25uZWN0aW9ucyB0byByZWFsLXdvcmxkIHByb2JsZW1zLgpSZWFkIG9uIHRvIGxlYXJuIHN0cmF0ZWdpZXMgSSB1c2VkIHRvIHN0YXJ0IHRoZSB2ZW50dXJlLCBpbnNpZ2h0cyBpbnRvCm15IGZpcnN0IGdhbWUsIOKAnFBoeXRvcGlh4oCdLCBhbmQgcGxhbnMgZm9yIGl0cyBleHBhbnNpdmUgZnV0dXJlLgoKPGJyPgoKKipTdGFydGluZyB0aGUgQnVzaW5lc3MqKgoKPGJyPgoKRm9yIGEgd2hpbGUgbm93LCBJ4oCZdmUgaGFkIGEgZGVlcCBpbnRlcmVzdCBpbiAzRCBtb2RlbGluZywgaWxsdXN0cmF0aW9uLApWRlgsIGFuZCBvdGhlciBmaWVsZHMgaW4gdGhlIGRpZ2l0YWwgYXJ0IHdvcmxkLiBJIGVuam95IHNlZWluZyB1bmlxdWUKd29ybGRzIGFuZCBjaGFyYWN0ZXJzIGNvbWUgdG8gbGlmZSwgZXNwZWNpYWxseSBieSBteSBjdXJzb3IuIEkgYmVsaWV2ZQp0aGlzIGRyaXZlIGlzIHdoYXQgdW5pdGVzIGFydGlzdHMgYWNyb3NzIHRoZSB3b3JsZC4gQXQgdGhlIHNhbWUgdGltZSwKSeKAmXZlIGRldmVsb3BlZCB2YXJpb3VzIHByb2dyYW1taW5nIGFuZCBjb21wdXRlciBlbmdpbmVlcmluZyBza2lsbHMsCnRocm91Z2ggc2Nob29sIGFuZCBvbmxpbmUgcmVzb3VyY2VzLiBJIHRyZWF0ZWQgdGhlc2UgYXMgc2VwYXJhdGUgc3BhY2VzCnVudGlsIEphbnVhcnkgb2YgbGFzdCB5ZWFyLCB3aGVuIEkganVtcGVkIGludG8gdGhlIGNvbXBsZXggYW5kClNURUFNLWNlbnRlcmVkIGNvbW11bml0eSBvZiBpbmRpZSBnYW1lIGRlc2lnbiBhbmQgY29tYmluZWQgbXkgaW50ZXJlc3RzCmFuZCBza2lsbHMuIEkgcXVpY2tseSBiZWNhbWUgZW5nYWdlZCB3aXRoIGdhbWUgZGVzaWduIGJlY2F1c2Ugb2YgdGhlCmV4dGVudCBvZiBmbGV4aWJpbGl0eSBhbmQgb3Bwb3J0dW5pdGllcyB0aGF0IHN0ZW0gZnJvbSBpdC4gVGhyb3VnaApleHBlcmltZW50YXRpb24sIEkgY3JlYXRlZCBzZXZlcmFsIHN0cmFpZ2h0Zm9yd2FyZCBnYW1lcyBiYXNlZCBvbiBjb3JlCmNvbmNlcHRzLiBBbHRob3VnaCBlbmxpZ2h0ZW5pbmcgYW5kIHVuaXF1ZSwgdGhleSB3ZXJlIG5vdCBmb3Igc2FsZS4KVGhlbiwgY291cnNlIHNlbGVjdGlvbiBmb3IgdGhpcyB5ZWFyIHdhcyB1cG9uIG1lLgoKPGJyPgpJIGVucm9sbGVkIGluIG91ciBFbnRyZXByZW5ldXJzaGlwOiBUaGUgVmVudHVyZSBDb3Vyc2UsIHRhdWdodCBieSBNci4KR29sZGJlcmcuIE9uZSBvZiBNYXJ0aW5ncm92ZeKAmXMgZ3JlYXQgcXVhbGl0aWVzIGlzIGl0cyBncmVhdCB2YXJpZXR5IG9mCm9wcG9ydHVuaXRpZXMsIGFzIGlzIG9mZmVyZWQgYnkgdGhpcyBjb3Vyc2UuIFdpdGggTXIuIEdvbGRiZXJn4oCZcwpndWlkYW5jZSwgSSBidWlsdCBhIG1hcmtldGluZyBhbmQgbWFuYWdlbWVudCB0b29sc2V0IGFzIHBhcnRzIG9mIG15CmJ1c2luZXNzIHBsYW4uIEZvciB0aG9zZSBsb29raW5nIGZvciB0aXBzIHdpdGggYSBuZXcgdmVudHVyZSwgaGVyZSBhcmUgYQpmZXcga2V5IGNvbmNlcHRzIEkgZm91bmQgdXNlZnVsOgoKPGJyPgoKQWZ0ZXIgc2VtZXN0ZXIgMSwgSSBmb3VuZCBlbmFjdGluZyBteSBwbGFucyB3YXNu4oCZdCBhbGwgc21vb3RoIHNhaWxpbmcuCkFuIGVudGlyZWx5IGRpZ2l0YWwgYnVzaW5lc3MgY29udGFpbnMgbm8gYmlsbGJvYXJkIHNpZ25zIG5vciBwb3N0ZXJzIGZvcgpjdXN0b21lcnMgdG8gd2FsayBieSwgYXMgYSBjb2ZmZWUgc2hvcCBtaWdodC4gUmF0aGVyLCBzcGFjZSBvbiB0aGUgV29ybGQKV2lkZSBXZWIgZmxvd3MgaW4gdGhlIHZlcnkgZGlmZmVyZW50IHdheSBvZiBjbGlja3MgYW5kIHNoYXJlcywgYW5kIGlzCmV4cGVuc2l2ZSB0byBkaXJlY3QuIFRoYXTigJlzIHdoeSBJ4oCZdmUgYnJhbmNoZWQgb3V0IGludG8gcGh5c2ljYWwgbWVkaXVtcywKc3VjaCBhcyB0aGlzIGFydGljbGUsIHdvcmQgb2YgbW91dGgsIGFuZCBwb3N0ZXJzLiBJ4oCZdmUgYWxzbyBvcHRpbWl6ZWQgbXkKb25saW5lIGFkdmVydGlzaW5nIGJ5IHRhcmdldGluZyBvbmx5IGludGVyZXN0ZWQgY3VzdG9tZXJzLCBhbmQgZm9jdXNpbmcKb24gYSBmZXcgZGlyZWN0IHBsYXRmb3JtcywgbXkgd2Vic2l0ZSBhbmQgSW5zdGFncmFtLCBtYWtpbmcgdXBkYXRlcwplYXNpZXIuCgo8YnI+CgpCYXNlZCBvbiBhbGwgdGhlc2UgZmFjdG9ycywgSeKAmWQgYXR0cmlidXRlIG15IHZlbnR1cmXigJlzIHN1Y2Nlc3Mgc28gZmFyLAphbmQgdGhlIGtleXMgdG8gc3RhcnRpbmcgb25lIG9mIHlvdXIgb3duLCB0byBhbiBpbnRlcmVzdCBpbgpleHBlcmltZW50YXRpb24gYW5kIGVtYnJhY2luZyB3b25kZXIsIHBhcnRpY2lwYXRpbmcgaW4gYSBjb21tdW5pdHkgdGhhdApwcm92aWRlcyBvcHBvcnR1bml0aWVzIGZvciBncm93dGgsIGFuZCB0aGUgcHVyc3VpdCBvZiB0aG9zZQpvcHBvcnR1bml0aWVzIG5vIG1hdHRlciB3aGF0IGNoYWxsZW5nZXMgb3IgZG91YnRzIHlvdSBmYWNlLiBJ4oCZbSBsb29raW5nCmZvcndhcmQgdG8gY3JlYXRpbmcgYW1hemluZyBhcnQgd2l0aCBTaWx2ZXIgU2hyaW1wLCBhbmQgSSBob3BlIHlvdeKAmWxsCmpvaW4gbWUuIFRoaXMgc3RhcnRzIHdpdGggUGh5dG9waWEsIGFuIGFkdmVudHVyZSBhcyBhIHRpbWUgdHJhdmVsaW5nCmV4cGxvcmVyLgoKPGJyPgoKKipQaHl0b3BpYSoqCgo8YnI+CkJhc2VkIG9uIHRoZSBQbGF5ZXIgU3VydmV5LCB5b3UgYXJlIG1vc3QgaW50ZXJlc3RlZCBpbiBhbiBhY3Rpb24gYW5kCnN0b3J5dGVsbGluZyBhZHZlbnR1cmUgd2l0aCBlbmdhZ2luZyBjb21iYXQuIFRoZXJlZm9yZSwgU2lsdmVyIFNocmltcOKAmXMKZmlyc3QgZ2FtZSB3aWxsIGJlIGV4YWN0bHkgdGhhdCwgd2l0aCB0aGVtZXMgYWJvdXQgdGhlIGVudmlyb25tZW50LCBhbmQKZXZlbiB0aW1lIHRyYXZlbC4gWW914oCZbGwgZm9sbG93IGEgbWlzZGlyZWN0ZWQgYW5kIGluZ2VuaW91cyBzb3VsIHdobwpicmVha3MgZnJlZSBmcm9tIHJlZ3VsYXRpb24sIHRvIGZpbmQgdGhlIHdvcmxkIGlzIG5vdCBhcyBzdHJhaWdodGZvcndhcmQKYXMgaXQgYXBwZWFycy4gSXTigJlzIHR1cm5pbmcgb3V0IHRvIGJlIGEgZGV0YWlsZWQgc3Rvcnkgd2l0aCBhIGNhcnRvb24sCnVzaW5nIGEgM0QgYXJ0IHN0eWxlIHRoYXQgaXMgYmVzdCBmb3IgcGljdHVyaW5nIGEgdmFyaWV0eSBvZiBsYW5kc2NhcGVzLgpIb3dldmVyLCBhbiBpbmRpZSBkZXZlbG9wZWQgZ2FtZSB3aWxsIGNoYW5nZSBkcmFzdGljYWxseSBvdmVyIHRoZQpkZXZlbG9wbWVudCBwZXJpb2QgYmFzZWQgb24gZmVlZGJhY2sgYW5kIG5ldyBpZGVhcywgc28gc3RheSB0dW5lZCBmb3IKbmV3IGZlYXR1cmVzIGFuZCBjaGFuZ2VzIHRvIFBoeXRvcGlhLiBEZXZlbG9wbWVudCBsb2dzIGZvciBwcm9ncmFtbWluZywKc3RvcnkgY3JlYXRpb24gYW5kIG1vcmUgd2lsbCBsaWtlbHkgYmUgYmktd2Vla2x5Lgo8YnI+ClNlZWluZyBhcyB5b3XigJl2ZSByZWFjaGVkIHRoZSBlbmQsIGdvIGNoZWNrIG91dCB0aGUgU2lsdmVyIFNocmltcCB3ZWJzaXRlCmF0IHd3dy5zaWx2ZXJzaHJpbXAuY2EsIG9yIHRoZSBpbnN0YWdyYW0gYWNjb3VudDoKQHNpbHZlcl9zaHJpbXBfc3R1ZGlvcy4gSGVyZSBJ4oCZbGwgcG9zdCBnYW1lIGRldmVsb3BtZW50IGxvZ3MgYW5kIG11Y2gKbW9yZSBkZXRhaWwgb24gdGhlIHRvcGljcyBJ4oCZdmUgY292ZXJlZCBpbiB0aGlzIGFydGljbGUuCg==";export{Z as default};
